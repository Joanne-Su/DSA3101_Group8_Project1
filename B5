import pandas as pd
import matplotlib.pyplot as plt

dfTrain = pd.read_csv("/content/sample_data/TrainingData.csv")
dfValid = pd.read_csv("/content/sample_data/ValidationData.csv")
df = pd.concat([dfTrain, dfValid])
import geopandas as gpd
from shapely.geometry import Point

# Convert dataframe to GeoDataFrame
df["geometry"] = df.apply(lambda row: Point(row["LONGITUDE"], row["LATITUDE"]), axis=1)
gdf = gpd.GeoDataFrame(df, geometry="geometry")

# Plot using GeoPandas
gdf.plot(marker="o", color="red", markersize=5)
plt.show() # Shows the outline of the buildings.

# To identify the number of distinct users and phones.
print(f"There are {df['USERID'].nunique()} distinct users.\n")
print(f"There are {df['PHONEID'].nunique()} different phones used.\n")

df.groupby('USERID')['PHONEID'].unique()


# Distribution of access points.
pivot_df = dfgrouped.pivot(index="FLOOR", columns="BUILDINGID", values="num_access_points")

# Plot the bar chart
pivot_df.plot(kind="bar", figsize=(10, 6))

# Add labels and title
plt.xlabel("Floor")
plt.ylabel("Number of Access Points")
plt.title("Access Points per Floor for Each Building")
plt.legend(title="Building ID")

plt.show()


# Count unique spaces on each floor.
df_filtered = df[df["BUILDINGID"] == 0]

# Group by FLOOR and count unique SPACEID values
unique_spaceid_counts = df_filtered.groupby("FLOOR")["SPACEID"].nunique()

# Display result
print(f'Building 0:\n{unique_spaceid_counts}\n')

df_filtered = df[df["BUILDINGID"] == 1]

unique_spaceid_counts = df_filtered.groupby("FLOOR")["SPACEID"].nunique()

print(f'Building 1:\n{unique_spaceid_counts}\n')

df_filtered = df[df["BUILDINGID"] == 2]

unique_spaceid_counts = df_filtered.groupby("FLOOR")["SPACEID"].nunique()

print(f'Building 2:\n{unique_spaceid_counts}\n')


# Convert epoch time to unix time yyyy-mm-dd HH:MM:SS
df['TIMESTAMP'] = pd.to_datetime(df['TIMESTAMP'], unit='s')
df['DATE'] = df['TIMESTAMP'].dt.date      # Extracts YYYY-MM-DD
df['TIME'] = df['TIMESTAMP'].dt.time  

# Number of users in each building per day.
df_grouped = df.groupby(['DATE', 'BUILDINGID'])['USERID'].nunique().reset_index()
# Plot
plt.figure(figsize=(12, 6))
sns.barplot(data=df_grouped, x='DATE', y='USERID', hue='BUILDINGID', dodge=True)

# Labels
plt.xlabel("Date")
plt.ylabel("Number of Users")
plt.title("Number of Users in Each Building per Day")
plt.xticks(rotation=45)
plt.legend(title="Building ID")

# Show plot
plt.show()
